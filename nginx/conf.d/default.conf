# proxy_cache_path    /var/cache/nginx
#                     keys_zone=NginxCache:20m
#                     max_size=10g
#                     inactive=60m
#                     levels=1:2;


## Rate Limiting
limit_req_zone $binary_remote_addr zone=limitbyaddr:10m rate=1r/s;

upstream demoV1 {
    server webv1:8000;
}


# upstream demoV2 {
#     server webv2:8080;
# }

# split_clients "${arg_token}" $variant {
#     50% demoV1;
#     *   demoV2;
# }


server {
    listen 80;

    location /split_test/ {
        proxy_pass http://demoV1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        limit_req zone=limitbyaddr;

        # proxy_cache NginxCache;
        # proxy_cache_min_uses 2;
        
        # proxy_cache_methods GET;
        # proxy_cache_valid 200 10m;
        # proxy_cache_valid 404 5m;

        # proxy_ignore_headers Vary;
        # proxy_cache_bypass $cookie_sessionid;

        # add_header X-Proxy-Cache $upstream_cache_status;


    }

    location /static/ {
        alias /home/app/staticfiles/;
    }

    # location /p1 {
    #     proxy_pass http://demo;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_cache_bypass;
    #     proxy_cache off;

    #     add_header X-Proxy-Cache $upstream_cache_status;
    # }

}



# server {
#     listen 80;
#     server_name main.com ns.main.com *.main.com;

#     location / {
#         root /usr/share/nginx/html/main;
#         index index.html;
#     }
# }

# server {
#     listen 80;
#     server_name secondary.com ns.secondary.com *.secondary.com;

#     location / {
#         root /usr/share/nginx/html/secondary;
#         index index.html;
#     }
# }